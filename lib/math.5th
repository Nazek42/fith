: factorial ( x -- x! ) 2 swap inc-range product ;

: prime? ( x -- prime-or-not )
    2 over sqrt ceil inc-range
    { over swap mod } map all
;

: gcd ( a b -- gcd(a,b) ) { dup } { tuck mod } while drop abs ;

: coprime? ( a b -- t/f ) gcd 1 =? ;
: totient ( n -- tot ) dup 1 swap range { pick coprime? } filter len ;
